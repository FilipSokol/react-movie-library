{"version":3,"sources":["components/Header.js","icons/imdb.svg","icons/filmweb.svg","components/Movie.js","icons/polish.svg","icons/english.svg","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Header","setMovies","useState","searchTerm","setSearchTerm","className","onSubmit","e","preventDefault","fetch","then","res","json","data","results","type","placeholder","onChange","target","value","Movie","title","poster_path","vote_average","overview","href","rel","src","filmweb","alt","imdb","length","slice","style","backgroundColor","color","fontSize","Navbar","language","setLanguage","page","setPage","Language","english","polish","onClick","App","movies","useEffect","map","movie","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd61cd71.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst MOVIE_API_SEARCH =\n  \"https://api.themoviedb.org/3/search/movie?api_key=90f0d968a7369326970f2fbe5ed0f445&query=\";\n\nconst Header = ({ setMovies }) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const handleOnSumbit = (e) => {\n    e.preventDefault();\n\n    if (searchTerm) {\n      fetch(MOVIE_API_SEARCH + searchTerm)\n        .then((res) => res.json())\n        .then((data) => {\n          setMovies(data.results);\n        });\n    }\n    setSearchTerm(\"\");\n  };\n\n  const handleOnChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  return (\n    <div className=\"Header\">\n      <div className=\"watchlistIcon\">\n        <button>\n          <i className=\"gg-film\"></i>\n        </button>\n      </div>\n      <form onSubmit={handleOnSumbit}>\n        <input\n          className=\"search\"\n          type=\"search\"\n          placeholder=\"🔍\"\n          onChange={handleOnChange}\n          value={searchTerm}\n        />\n      </form>\n    </div>\n  );\n};\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/imdb.76c861bb.svg\";","export default __webpack_public_path__ + \"static/media/filmweb.b5f4a0df.svg\";","import React from \"react\";\nimport imdb from \"../icons/imdb.svg\";\nimport filmweb from \"../icons/filmweb.svg\";\n\nconst MOVIE_API_IMAGES = \"https://image.tmdb.org/t/p/w500\";\n\nconst Movie = ({ title, poster_path, vote_average, overview }) => {\n  return (\n    <div className=\"Movie\">\n      <div className=\"movieDescription\">\n        <div className=\"filmwebButton\">\n          <a\n            href={\"https://www.filmweb.pl/search?q=\" + title}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img src={filmweb} alt=\"filmweb\"></img>\n          </a>\n        </div>\n        <div className=\"imdbButton\">\n          <a\n            href={\"https://www.imdb.com/find?q=\" + title}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img src={imdb} alt=\"imdb\"></img>\n          </a>\n        </div>\n        {overview.length < 500 ? overview : overview.slice(0, 500) + \"...\"}\n      </div>\n\n      <div\n        className=\"scoreBadge\"\n        style={{\n          backgroundColor: vote_average > 6.5 ? \"#0abe8e\" : \"#f72585\",\n        }}\n      >\n        {vote_average}\n      </div>\n      <div className=\"watchlistBadge\">\n        <i className=\"gg-eye\" style={{ color: \"white\" }}></i>\n      </div>\n      <img\n        src={\n          poster_path != null\n            ? MOVIE_API_IMAGES + poster_path\n            : \"https://i.imgur.com/nxArlzv.jpg\"\n        }\n        alt={title}\n      ></img>\n\n      <div\n        className=\"movieInfo\"\n        style={{ fontSize: title.length > 25 ? \"0.8rem\" : \"1rem\" }}\n      >\n        <h3>{title}</h3>\n      </div>\n    </div>\n  );\n};\nexport default Movie;\n","export default __webpack_public_path__ + \"static/media/polish.9954e265.svg\";","export default __webpack_public_path__ + \"static/media/english.8f1bacdb.svg\";","import React from \"react\";\nimport polish from \"../icons/polish.svg\";\nimport english from \"../icons/english.svg\";\n\nconst Navbar = ({ language, setLanguage, page, setPage }) => {\n  const Language = () => {\n    if (language === \"en\") {\n      return <img src={english} alt=\"english\"></img>;\n    } else {\n      return <img src={polish} alt=\"polish\"></img>;\n    }\n  };\n\n  const switchLanguage = () => {\n    if (language === \"en\") {\n      setLanguage(\"pl\");\n    } else {\n      setLanguage(\"en\");\n    }\n  };\n\n  const previousPage = () => {\n    if (page !== 1) {\n      setPage(page - 1);\n    }\n  };\n\n  const nextPage = () => {\n    setPage(page + 1);\n  };\n\n  return (\n    <div className=\"Navbar\">\n      <div className=\"pageControl\">\n        <button onClick={previousPage}>\n          <i className=\"gg-arrow-left-r\"></i>\n        </button>\n        <button onClick={nextPage}>\n          <i className=\"gg-arrow-right-r\"></i>\n        </button>\n      </div>\n      <div className=\"languageButton\">\n        <button onClick={switchLanguage}>\n          <Language />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Navbar;\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Movie from \"./components/Movie\";\nimport Navbar from \"./components/Navbar\";\n\nconst MOVIE_API_LIST =\n  \"https://api.themoviedb.org/3/movie/popular?api_key=90f0d968a7369326970f2fbe5ed0f445\";\n\nfunction App() {\n  const [page, setPage] = useState(1);\n  const [movies, setMovies] = useState([]);\n  const [language, setLanguage] = useState(\"en\");\n\n  useEffect(() => {\n    fetch(MOVIE_API_LIST + `&language=${language}&page=${page}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setMovies(data.results);\n      });\n  }, [language, page]);\n\n  return (\n    <div className=\"App\">\n      <Header setMovies={setMovies} />\n      <div className=\"movieContainer\">\n        {movies.map((movie) => (\n          <Movie key={movie.id} {...movie} />\n        ))}\n      </div>\n      <Navbar\n        language={language}\n        setLanguage={setLanguage}\n        page={page}\n        setPage={setPage}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}